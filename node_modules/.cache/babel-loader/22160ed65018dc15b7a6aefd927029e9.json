{"ast":null,"code":"var _jsxFileName = \"/home/soninishit/Desktop/successive/practice-react/React-Tasks/src/pages/dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { MainDiv, WrapperDiv, Input, Wrapper, Label, Button } from \"../components/style\";\nimport { validEmail, validUsername, validPassword } from \"../components/validation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [userData, setUserData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  }); //    const[error,setError] = useState({\n  //        usernameError:\"false\",\n  //        emailError:\"false\",\n  //        passwordError:\"false\"\n  //    })\n\n  const [usernameError, setUsernameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const handleChange = e => {\n    setUserData({ ...userData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleUsernameFocus = () => {\n    usernameError(false);\n  };\n\n  const handleEmailFocus = () => {\n    emailError(false);\n  };\n\n  const handlePasswordFocus = () => {\n    passwordError(false);\n  };\n\n  var data = \"Data Passed Successfully!\";\n\n  const handleSubmit = () => {\n    if (!validUsername.test(userData.username)) {\n      setUsernameError(true);\n    }\n\n    if (!validEmail.test(userData.email)) {\n      setEmailError(true);\n    }\n\n    if (!validPassword.test(userData.password)) {\n      setPasswordError(true);\n    } else {\n      setUsernameError(false);\n      setEmailError(false);\n      setPasswordError(false);\n      navigate('/display', {\n        state: {\n          data,\n          userData\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(WrapperDiv, {\n        children: [/*#__PURE__*/_jsxDEV(MainDiv, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"username\",\n            children: \"User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"UserName\",\n            name: \"username\",\n            onChange: handleChange,\n            onFocus: handleUsernameFocus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), usernameError && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"username should not be empty!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MainDiv, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            placeholder: \"Email\",\n            name: \"email\",\n            onChange: handleChange,\n            onFocus: handleEmailFocus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"email should not be empty!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MainDiv, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            placeholder: \"Password\",\n            name: \"password\",\n            onChange: handleChange,\n            onFocus: handlePasswordFocus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), passwordError && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"password should not be empty!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MainDiv, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Dashboard, \"Z+41hI9fjpteJIdto0FRi/Zu+9I=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/soninishit/Desktop/successive/practice-react/React-Tasks/src/pages/dashboard.js"],"names":["useState","useNavigate","MainDiv","WrapperDiv","Input","Wrapper","Label","Button","validEmail","validUsername","validPassword","Dashboard","navigate","userData","setUserData","username","email","password","usernameError","setUsernameError","emailError","setEmailError","passwordError","setPasswordError","handleChange","e","target","name","value","handleUsernameFocus","handleEmailFocus","handlePasswordFocus","data","handleSubmit","test","state"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { MainDiv , WrapperDiv ,Input,Wrapper , Label, Button} from \"../components/style\";\nimport { validEmail,validUsername, validPassword } from \"../components/validation\";\nconst Dashboard = () => {\n    const navigate = useNavigate();\n    const[userData,setUserData] = useState(\n        {\n            username:\"\",\n            email:\"\",\n            password:\"\"\n        }\n    );\n//    const[error,setError] = useState({\n//        usernameError:\"false\",\n//        emailError:\"false\",\n//        passwordError:\"false\"\n//    })\nconst[usernameError,setUsernameError] = useState(false)\nconst[emailError,setEmailError] = useState(false)\nconst[passwordError,setPasswordError] = useState(false)\n   \nconst handleChange = (e) => {\n    setUserData({\n        ...userData,\n\n        [e.target.name]:e.target.value\n    })\n}\n\nconst handleUsernameFocus = () => {\n    usernameError(false)\n}\n\nconst handleEmailFocus = () => {\n    emailError(false)\n}\nconst handlePasswordFocus = () => {\n    passwordError(false)\n}\n\nvar data = \"Data Passed Successfully!\";\nconst handleSubmit = () => {\nif(!validUsername.test(userData.username)){\n    setUsernameError(true)\n}\nif(!validEmail.test(userData.email)){\n    setEmailError(true)\n}\nif(!validPassword.test(userData.password)){\n    setPasswordError(true)\n}\nelse{\n    setUsernameError(false)\n    setEmailError(false)\n    setPasswordError(false)\n    navigate('/display',{state:{data,userData}})\n}\n}\n    return(\n        <>\n        <Wrapper>\n        <WrapperDiv>\n            <MainDiv>\n             <Label for=\"username\">User Name</Label>   \n            <Input type=\"text\" placeholder=\"UserName\" name=\"username\" onChange={handleChange} onFocus={handleUsernameFocus}/>\n            {usernameError && <p>username should not be empty!</p>}\n            </MainDiv>\n            \n            <MainDiv>\n             <Label for=\"email\">Email</Label>   \n            <Input type=\"email\" placeholder=\"Email\" name=\"email\" onChange={handleChange} onFocus={handleEmailFocus}/>\n            {emailError && <p>email should not be empty!</p>}\n            </MainDiv>\n            \n            <MainDiv>\n             <Label for=\"password\">Password</Label>   \n            <Input type=\"password\" placeholder=\"Password\" name=\"password\" onChange={handleChange} onFocus={handlePasswordFocus}/>\n            {passwordError && <p>password should not be empty!</p>}\n            </MainDiv>\n            \n            <MainDiv>\n                <Button type=\"submit\" onClick={handleSubmit}>Submit</Button>\n            </MainDiv>\n        </WrapperDiv>\n        </Wrapper>\n        </>\n    )\n}\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}